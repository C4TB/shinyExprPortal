[{"path":[]},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"improvements","dir":"","previous_headings":"","what":"Improvements","title":"Contributing to shinyExprPortal","text":"want propose small change improve existing modules, please file issue go along pull request. create pull request, following steps useful: Fork clone usethis::create_from_github(\"C4TB/shinyExprPortal\", fork = TRUE) Install dependencies devtools::install_dev_deps() Create branch PR, e.g. usethis::pr_init(\"--changing\") Make changes commit git, run usethis::pr_push wait review.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"new-modules","dir":"","previous_headings":"","what":"New modules","title":"Contributing to shinyExprPortal","text":"happy support addition new modules package appropriate. idea module, can use support custom modules develop test proposing include package. module think good number use cases relevant users, please file issue GitHub take . start new module, can run function create_module_template(\"module_name\") inside R folder repository (forking cloning ). follow two guides : adding new module design programming principles. principles followed unless good reason .","code":""},{"path":[]},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"structure","dir":"","previous_headings":"Adding a new module","what":"Structure","title":"Contributing to shinyExprPortal","text":"module always named camelCase , finalised, included list available modules inst/app-config.yml. module can require additional configuration settings , included app, value TRUE configuration file, follows: module consist least two files: first file contains three functions: mod_moduleName_ui, mod_moduleName_tab mod_moduleName_server. second file function called mod_moduleName_config, receives config argument. , , module require configuration, function look follows: Otherwise, function return transformed config object required, module-exclusive plotting data functions can included mod_*_utils.R file. primary aim file reduce amount code main module file; functions potentially used files, go general utils_*.R files. way, author wants use function exists existing mod_*_utils.R file general way, can rewrite transfer utils_*.R file.","code":"[more configuration above] moduleName:   TRUE [more configuration below] mod_moduleName.R   mod_moduleName_config.R moduleNameConfig <- function(config, ...) {    message(\"Checking moduleName configuration\")   as.logical(config) } moduleNameConfig <- function(config, ...) {    message(\"Checking moduleName configuration\")   config$argument <- doSomethingWith(config$argument)   config }"},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"Adding a new module","what":"Testing","title":"Contributing to shinyExprPortal","text":"run_module function allows testing newly developed module isolation rest application (enables using browser(), example, react logs). possible, need add module name available_modules list inst/app-config.yml, mentioned , set .yaml configuration test file appropriately. configuration file similar possible final configuration file, terms data-related properties, new module configuration. can modify function call end script dev/run_module.R, configuration.yaml also located dev: can pass data_folder argument function, e.g. data_folder = \"../testProject\", want keep data files configuration file separate folder.","code":"# Run the application run_module(module_name = \"newModule\",            config_file = \"configuration.yaml\")"},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"documenting-and-deploying","dir":"","previous_headings":"Adding a new module","what":"Documenting and deploying","title":"Contributing to shinyExprPortal","text":"last step creation guide configuring using new module. , modify corresponding vignette (config.Rmd) add entry new module using template modules documented .","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"design-and-programming-principles","dir":"","previous_headings":"","what":"Design and programming principles","title":"Contributing to shinyExprPortal","text":"section describes principles guiding design modules shinyExprPortal. aim establish development boundaries (.e. much computation done within app) general readability vs. performance decisions. help design implement new modules.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"id_1-prioritizing-base-r","dir":"","previous_headings":"Design and programming principles","what":"1 Prioritizing base R","title":"Contributing to shinyExprPortal","text":"app, , already imports relatively high number packages, aim avoid including new dependencies much possible maintenance customization reasons. better preserve cohesive app, modifying internal functions required support new functionality, rather modules similar computations rely different packages. second reason performance. tempting use packages include wrappers convenience functions, e.g. compute correlation p-values simultaneously. large expression matrices, probably better use base R cases.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"id_2-reactives-vs-functions","dir":"","previous_headings":"Design and programming principles","what":"2 Reactives vs functions","title":"Contributing to shinyExprPortal","text":"priority writing module separate reactive selections computations. code inside reactive blocks serve evaluate required inputs pass arguments functions. Example:","code":"computedData <- eventReactive(input$compute_button, {       req(input$slider_value)      myFilterFunction(expression_matrix, input$slider_value)  })  output$plot <- renderPlot({    plotBarChart(computedData())  })"},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"id_3-on-functions","dir":"","previous_headings":"Design and programming principles","what":"3 On functions","title":"Contributing to shinyExprPortal","text":"Split combine functions needed: plot function result similar another, good idea combine single function varying parameters. time, ’s also good idea reduce function bare minimum across modules, additional functions complement . Example: basic scatterplot bit customization base function, faceting fiting lines separate functions. Placement: also better leave module-specific functions module-specific file. future can moved generic files used across modules. Naming: internal functions exported, ’s preferable give longer descriptive names selectGenesIfTrue, instead generic name “filter”.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/CONTRIBUTING.html","id":"id_4-analysis-results-vs-exploration-trade-offs","dir":"","previous_headings":"Design and programming principles","what":"4 Analysis results vs exploration trade-offs","title":"Contributing to shinyExprPortal","text":"app enables visual exploration data well results analysis, actual analysis tool , e.g. clustering differential expression analysis. results require additional, non-standard packages (e.g. limma) computed separately results included files. Potential exceptions file sizes significantly higher computation time.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Rafael Henkin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"configuration-file","dir":"Articles","previous_headings":"","what":"Configuration file","title":"Full Configuration Guide","text":"YAML syntax: configuration fields defined colon (:). Lists values defined using hyphens square brackets (e.g. [“”, “B”, “C”]. Besides text, lists can contain complex objects, fields listed key-value pair. Values without spaces need double quotes, problem use . Examples:","code":"# Hyphenated list example Name:   - Value1   - Value2   - Value3 # Alternative with square brackets Name2: [\"A\", \"B\", \"C\"] # Key-value list example FieldName:   Key1: Value1   \"Key2\": \"Value2\"   Key3: Value3 # Hyphen + Key-value  # Each hyphenated group corresponds to a list FieldName:   - Key1: Value1     Key2: Value2   - Key1: Value3     Key2: Value4"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"project-details-configuration","dir":"Articles","previous_headings":"Configuration file","what":"Project details configuration","title":"Full Configuration Guide","text":"Required settings name text, markdown HTML file located folder app.R file. file provided, application show default placeholder text. Optional settings Name short name project (e.g. acronym). Window title name name provided, can still define windowtitle appear browser. Logo custom logo top-left corner can provided web-supported format (e.g. png, jpeg). logo provided, short project name used instead. Bootswatch theme custom Bootswatch theme can used instead default one. can use versions 3, 4 5 guarantee style look across versions. Although dark themes can used, visualizations adapted . bootstrap, additional setting passed bslib::theme() command, allowing customization. information, check bs_theme documentation supported arguments run ?bslib::theme local help page. Icon menu icon menu highlights can displayed section. , module names must included list, PNG images, 1:1 aspect ratio named modules, must placed www folder (located folder app.R ). example, include highlight shortcut singleGeneCorr, module name must listed file singleGeneCorr.png placed www folder. images rendered 250px x 250px. Example:","code":"about: about.md name: PROJ windowtitle: My Full Project Name Expression Analyiss Portal logo: logo.png bootstrap:   version: 3   bootswatch: cosmo iconMenu:   - singleGeneCorr"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"data-and-global-configurations","dir":"Articles","previous_headings":"Configuration file","what":"Data and global configurations","title":"Full Configuration Guide","text":"data section, measures, sample_lookup expression_matrix files must defined. Additional files shared across multiple modules can also defined section, e.g. models table DE modules (see degModules details). Sample subject variables package make assumptions order columns containing subject sample identifiers measures lookup table files, names columns must provided. Alternatively, name Subject_ID Sample_ID package look names default. Time separator custom separator can used identify temporal suffix measures names. default _, timesep can used define another separator. Currently, used compareTrajGroups module. Sample categories property sample_categories define metadata variables used interface select subsets samples. sample class defined corresponding variable name sample lookup file, nice label displayed list valid values subsetting samples. valid values can also assigned nice labels display format Nice Label: originalValue. case, hyphens square brackets used, example . Example: advanced option allows selecting samples particular category. , custom pair label value : NA can used. useful explore subsets samples sample-based partition (e.g. subset samples patients high disease burden). Example: Default advanced settings modules, package includes default parameters computation methods, correlation metric used. can overridden displayed options portal users, defaults can also defined configuration file applied modules look . following properties can defined: default_measures_outliers: automatically remove measures outliers (measure) 5/95 percentiles method Tukey’s IQR method. Package default . Affects correlation modules. default_expression_outliers: automatically remove expression outliers (gene) 5/95 percentiles method Tukey’s IQR method. Package default . Affects correlation modules. default_correlation_method: pearson, spearman kendall correlation measures. Default pearson. Affects correlation modules. default_fit_method: none, linear, quadratic cubic. Affects scatterplots singleGeneCorr compareTrajGropus. adjust_method: holm, hochberg, hommel, bonferroni, BH, , fdr, none q.value. Default q.value qvalue package. Affects correlation degDetails modules. Example:","code":"data:   measures: measures.csv   sample_lookup: sample_lookup.csv   expression_matrix: matrix.csv   models: models.tsv subject_variable: Subject_ID sample_variable: Sample_ID timesep: \".\" sample_categories:   - name: variable_name     label: Variable Name     values:       Optional Label 1: value1       Optional Label 2: value2   - name: variable_name_2     label: Another Variable     values:       - anothervar_value1       - anothervar_value2 global:   sample_classes:     - name: variable_name       label: Variable Name       values:         Optional Label 1: value1         Optional Label 2: value2         All: NA     - name: variable_name_2       label: Another Variable       values:         - anothervar_value1         - anothervar_value2 default_measures_outliers: No default_expression_outliers: No default_correlation_method: spearman default_fit_method: linear adjust_method: fdr"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"modules","dir":"Articles","previous_headings":"","what":"Modules","title":"Full Configuration Guide","text":"final part configuration file definition modules included portal. specified order appear portal menu. function show_available_modules() can used check modules currently supported package loaded; guide also date can also used reference. following modules grouped modules currently supported (grouped modules pseudo-modules define sub-menus portal): package contains suggested dependencies needed specific modules. guide lists additional dependencies module. way discover additional dependency set configuration file try run portal. package missing, portal run notified package dependency missing. also optional settings supported modules, customization purposes. title custom name module can defined every module description description paragraph can defined instruct users usage module provide additional information, descriptions data visualized links external references. Example: Modules:","code":"moduleName:   title: New Title   description: New description for this module   requiredSetting1: TRUE   requiredSetting2: FALSE"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"cohortOverview","dir":"Articles","previous_headings":"Modules","what":"cohortOverview","title":"Full Configuration Guide","text":"Required packages: r2d3 module displays grid small line plots subject measures file. line plots show subjects’ trajectory various measures time, line colors selected user set variables. Minimum configuration Example:","code":"cohortOverview:   profile_variables:     Platelets:       values: [Platelets_m01, Platelets_m02]   colour_variables: [Age, Platelets_m01, Platelets_m02]"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"compareTrajGroups","dir":"Articles","previous_headings":"Modules","what":"compareTrajGroups","title":"Full Configuration Guide","text":"Optional required packages: [{RColorBrewer}](https://CRAN.R-project.org/package=RColorBrewer) module shows combined expression measure trajectory subjects time. user can select one gene one measure taken time. idea module split subjects two groups using sidebyside_category lookup table (e.g. two drug groups). Samples time values defined trajectory_category taken filtered user selection based remaining subset_categories (e.g. lookup table contains DrugGroup, Time Tissue, remaining valid category Tissue). measures paired samples taken combining compare_variables time-values trajectory_category. example, Platelets one possible variables times m01 m02, trajectory constructed observations Platelets_m01 Platelets_m02 measures table. expression selected gene also taken using observations samples m01 m2. interface, users able select variables listed compare_variables. Minimum configuration Example: custom_traj_palette: name RColorBrewer palette list valid colours (e.g. hex value) can supplied using keyword. colors used order appearance color points value trajectory_category. advanced: following advanced options can defined, otherwise defaults described earlier guide used: fit_method: TRUE AllowHide, lets users choose regression method available ones (linear, quadratic cubic). AllowHide includes None option interface. *Example optional settings","code":"compareTrajGroups:   subset_categories:     - Tissue   sidebyside_category: DrugGroup   trajectory_category: Time   compare_variables:     - Platelets knitr::include_graphics(\"comparetraj.png\") compareTrajGroups:   ...   custom_traj_palette: [\"purple\", \"yellow\", \"red\", \"blue\"]   advanced:     fit_method: AllowHide"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"degDetails","dir":"Articles","previous_headings":"Modules","what":"degDetails","title":"Full Configuration Guide","text":"module displays volcano plots table results differential expression analysis exported packages limma, deseq2, edgeR. depends separate table categorizes DE results files. table contain high level category variable identifies different types models File column corresponding file names. columns table partially match sample classes defined global, meaningful. following valid minimal model results table: following example layered model setup: configuration module requires category_variable identify models models file table; file can tab-separated comma-separated values file. Individual model results placed inside models folder. Minimum configuration: Example:","code":"degDetails:   category_variable: Model   models: model.tsv"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"degSummary","dir":"Articles","previous_headings":"Modules","what":"degSummary","title":"Full Configuration Guide","text":"Required packages: {knitr}, {kableExtra} module displays summary table models included models table (see previous module). aggregates number significant genes p-value adjusted p-values (0.05 threshold) model. partition_variable, matching variable models table (e.g. Drug) used partition results vertically. two drugs d1 d2, means table contain 4 columns: number significant d1 p-value genes, d1 adjusted p-value genes, d2 p-value genes d2 adjusted p-value genes. Minimum configuration","code":"degSummary:   partition_variable: Drug   models: models.tsv"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"geneModulesHeatmap","dir":"Articles","previous_headings":"Modules","what":"geneModulesHeatmap","title":"Full Configuration Guide","text":"Required packages: {RColorBrewer} modules enables visualizing subset genes, e.g. co-expression module, cluster signature, related downstream analysis method regulatory networks. displays heatmap expression genes user-selected module scatterplots association module eigengene measures defined configuration file. Gene modules must specified table model/analysis category source, valid sample categories associated module, module name list associated genes required. also possible include annotations heatmap defining list valid measures categorical variables user can select. following example valid modules table: module also support generic lists genes can made visible selection subsets samples. define lists genes purpose, can use * wildcard sample category column. following example hypothetical co-expression modules (e.g. outputs WGCNA CEMiTool), allows user explore modules subset Time Drug. configuration requires modules_table pointing table file , category_variable identifies table column highest-level category modules, modules_variable identifies table column names modules genes_variable, identifies table column contains list gene symbols separated comma. interface, users select Category subsets remaining sample categories table (e.g. , Time Drug) see list modules associated category sample classes. optional ordering column can included table, set config file rank_variable, choose custom appearance order modules, example . Minimum configuration Example: subset_categories: list categories display filter. used every sample category lookup table use create subsets samples. example, pseudo-category created split patients based clinical measure, may want show filter every module app. scatterplot_variables: list measures correlate module eigengene display scatterplots similar single gene module. annotation_variables: list measures can supplied users can add annotations heatmap. variable names match measures table, independent timepoint.custom_annotation_colors: default, heatmap package (plotly-powered iheatmapr) automatically assign colors annotations. Alternatively, RColorBrewer palette list colors (e.g. hex values) can assigned selected individual variables (variable custom palette use default palette). continuous variables, interpolation applied list colors.annotation_range: numeric variables share theoretical range values, range varies observed data, possible define individual ranges color scale across annotations. annotation variable, minimum maximum value can provided list. common use case disease activity variables maximum value decreases time patients improve.custom_heatmap_palette: custom RColorBrewer palette can provided override default RdBu palette used heatmap. Example optional settings:","code":"geneModulesHeatmap:   modules_table: modules.csv   category_variable: Category   modules_variable: ModuleName   genes_variable: targetGenes geneModulesHeatmap:   ...   subset_categories:     - Cell_Type   scatterplot_variables:     - Platelets_m01     - Platelets_m02   annotation_variables:     - Age     - Platelets_m01     - Platelets_m02     - diseaseActivity_m01     - diseaseActivity_m02   custom_annotation_colors:     drugNaive:       Yes: yellow       No: green     Age: Reds   annotation_range:     diseaseActivity_m01: [0, 99]     diseaseActivity_m02: [0, 99]   custom_heatmap_palette: BrBG"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"geneProjectionOverlay","dir":"Articles","previous_headings":"Modules","what":"geneProjectionOverlay","title":"Full Configuration Guide","text":"module allow users explore expression variation pre-computed clusters genes across subsets subjects, following pre-computed 2D projection genes whole dataset. module developed considering 1:1 subject--sample ratio rather multiple samples per subject. display 2D projection two scatterplots: one displays points colored group membership displays mean expression gene relative mean expression genes (.e. fold change). Sample categories can used define subsets samples based characteristic subjects, disease activity measure. scatterplot show expression variation subset . coordinates file must contain gene symbols, two columns position column group. first three must appear exact order, following: table can .rds, .csv .tsv file must defined coordinates_file setting. group column must indicated using group_variable setting. Minimum configuration Example: module also includes heatmap view individual expression samples genes belong selected group, can display annotations based measures table. defined annotation_variables, , previous module, also option defining custom colors custom_annotation_colors fix variable ranges annotation_range. annotation_variables: list measures can supplied users can add annotations heatmap. variable names fully match measures table names, including time point. custom_annotation_colors: default, heatmap package (plotly-powered iheatmapr) automatically assign colors annotations. Alternatively, RColorBrewer palette list colors (e.g. hex values) can assigned selected individual variables (variable custom palette use default palette). continuous variables, interpolation applied list colors.annotation_range: numeric variables share theoretical range values range varies observed data, possible define individual ranges color scale across annotations. annotation variable, minimum maximum value can provided list. common use case disease activity variables maximum value decreases time patients improve, blood samples. Example optional settings:","code":"geneProjectionOverlay:   coordinates_file: coordinates.csv   group_variable: group geneProjectionOverlay:   ...   annotation_variables:     - Platelets_m01     - Platelets_m06   custom_annotation_colors:     Platelets_m01: BrBG   annotation_range:     Platelets_m01: 0-20     Plaetelts_m06: 0-20"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"networkViewer","dir":"Articles","previous_headings":"Modules","what":"networkViewer","title":"Full Configuration Guide","text":"Required packages: {visNetwork}, {igraph}, module allows exploring networks genes produced methods ARACNe. supports reading list edges represent connected components whole network, , list edges produce multiple separate subnetworks. user selects source file edges node; module displays component contains node. second source also selected , exists, second component shown next first. enables comparing connections node nodes two time points, example. edge list file contain names nodes prefix corresponding type sample category name node suffix, example, WHOLEBLOOD_IFNG. edge list table can comma- tab-separated values file without header must contain columns corresponding , order: source name, target name node weight. configuration section module requires specification network_files corresponding edge lists sample_category corresponding prefixes nodes mean. following valid configuration module: Example: possible customize appearance network nodes background text colors: custom_node_colors: named list prefixes desired HTML-compatible colors custom_font_colors: named list prefixes desired HTML-compatible colors Example optional settings:","code":"networkViewer:   network_files:     - name: \"First Month Network\"       file: first_month.edge     - name: \"Second Month Network\"       file: second_month.edge   sample_category: TissueType networkViewer:   ...   custom_node_colors:     Tissue1: \"#FF0000\"     Tissue2: \"#FFFF00\"     Tissue3: \"#00FF00\"   custom_font_colors:     Tissue1: \"#FFFFFF\"     Tissue2: \"#000000\"     Tissue3: \"#FFFFFF\""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"singleGeneCorr","dir":"Articles","previous_headings":"Modules","what":"singleGeneCorr","title":"Full Configuration Guide","text":"module allows users compare expression single gene selected subset samples observed measures scatterplots. Groups scatterplots arranged sub-tabs. Groups specified list tabs field. tab contains name displayed, scale setting, can either free (scatterplot range horizontal axis) fixed (scatterplots tab horizontal axis), list variables scatterplot. module can passed name link_to modules. Minimum configuration subset_categories: list categories display filter. used every sample category lookup table use create subsets samples. example, pseudo-category created split patients based clinical measure, may want show filter every module app. color_variables: list variables, either numeric discrete, can supplied users can assign color subjects. custom_point_colors: optionally, color variables, possible supply custom colors : valid Vega schemes, list colors named list colors (see DrugNaive example ). advanced: following advanced options can defined, otherwise defaults described earlier guide used: correlation_method: TRUE, allows users alternate Pearson, Spearman Kendall methods computing correlation. expression_outliers: TRUE, allows users exclude expression outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. measures_outliers: TRUE, allows users exclude measures outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. fit_method: TRUE AllowHide, lets users choose regression method available ones (linear, quadratic cubic). AllowHide includes None option interface. Example optional settings:","code":"singleGeneCorr:   tabs:     - name: Platelets       scale: free       variables:         - Platelets_m01         - Platelets_m02 singleGeneCorr:   tabs:     ...   subset_categories:     - Cell Type   color_variables: [DrugNaive, Age]   custom_point_colors:     Age: purpleblue     DrugNaive       Yes: yellow       No: green   advanced:     correlation_method: TRUE     expression_outliers: TRUE     measures_outliers: TRUE     fit_method: AllowHide"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"singleMeasureCorr","dir":"Articles","previous_headings":"Modules","what":"singleMeasureCorr","title":"Full Configuration Guide","text":"module allows users view table correlation one single measure genes selected subset. module can set list measures users can select interface optional advanced settings correlation method outlier removal. default, module can defined simply TRUE include numeric measures advanced settings: Minimum configuration list variables can provided dropdown_variables: Example: subset_categories: list categories display filter. used every sample category lookup table use create subsets samples. example, pseudo-category created split patients based clinical measure, may want show filter every module app.link_to: name another module create link results table. Every gene table clickable link module, subset matching ones selected user. module linked also support functionality setting work. advanced: following advanced options can defined, otherwise defaults described earlier guide used: correlation_method: TRUE, allows users alternate Pearson, Spearman Kendall methods computing correlation. expression_outliers: TRUE, allows users exclude expression outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. measures_outliers: TRUE, allows users exclude measures outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. Example optional settings:","code":"singleMeasureCorr:   TRUE singleMeasureCorr:   dropdown_variables:     - Platelets_m01     - Platelets_m02     - Platelets_m03 singleMeasureCorr:   subset_categories:     - Cell Type   link_to: singleGeneCorr   advanced:     correlation_method: TRUE     measures_outliers: TRUE"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"multiMeasureCorr","dir":"Articles","previous_headings":"Modules","what":"multiMeasureCorr","title":"Full Configuration Guide","text":"module allows users view heatmap table significantly correlated genes across predefined set measures. genes taken subset selected user, based sample categories. module requires specification heatmap_variables, multiple named lists variables. Minimum configuration subset_categories: list categories display filter. used every sample category lookup table use create subsets samples. example, pseudo-category created split patients based clinical measure, may want show filter every module app. custom_heatmap_scheme: valid Vega schemes can provided override default redblue scheme. link_to: name another module create link results table. Every gene table clickable link module, subset matching ones selected user. module linked also support functionality setting work. advanced: following advanced options can defined, otherwise defaults described earlier guide used: correlation_method: TRUE, allows users alternate Pearson, Spearman Kendall methods computing correlation. expression_outliers: TRUE, allows users exclude expression outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. measures_outliers: TRUE, allows users exclude measures outliers scatterplots, either Tukey’s IQR range filtering, 5/95 percentiles none. Example optional settings:","code":"multiMeasureCorr:   heatmap_variables:     Platelets: [Platelets_m01, Platelets_m02] multiMeasureCorr:   ..   subset_categories:     - Cell_Type   link_to: singleGeneCorr   advanced:     correlation_method: TRUE     measures_outliers: TRUE"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"grouped-modules","dir":"Articles","previous_headings":"","what":"Grouped modules","title":"Full Configuration Guide","text":"module defined appear separate entry menu. However, modules share underlying functionality purpose, differential expression modules correlation modules. Therefore, package supports grouped modules can specified configuration file, grouped menu website. existence modules defined internally package customisable deploying project.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"degModules","dir":"Articles","previous_headings":"Grouped modules","what":"degModules","title":"Full Configuration Guide","text":"group modules includes degDetails degSummary. modules require model table files, using degModules possible specify model file part data section configuration avoid reading models twice. Please note indentation required defining sub-modules. Configuration example","code":"data:   ...   models: models.tsv degModules:   degSummary:     ...   degDetails:     ..."},{"path":"https://c4tb.github.io/shinyExprPortal/articles/config.html","id":"corrModules","dir":"Articles","previous_headings":"Grouped modules","what":"corrModules","title":"Full Configuration Guide","text":"group modules include singleGeneCorr, singleMeasureCorr multiMeasureCorr. use , correct indentation needed: Configuration example","code":"corrModules:   singleGeneCorr:     ...   singleMeasureCorr:     ...   multiMeasureCorr:     ..."},{"path":"https://c4tb.github.io/shinyExprPortal/articles/customization.html","id":"customizing-the-portal-ui","dir":"Articles","previous_headings":"","what":"Customizing the portal UI","title":"Portal UI and Code Customization","text":"two ways customize interface deployed portal: global settings module-specific settings. Existing module-specific settings stable, new ones may added time.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/customization.html","id":"global-customizations","dir":"Articles","previous_headings":"Customizing the portal UI","what":"Global customizations","title":"Portal UI and Code Customization","text":"current version, can add acronym logo, change title tab browser, add icon-based shortcut menu landing page modify Bootswatch theme. configuration file look like settings : logo icon menu, create folder named www project’s folder place corresponding images inside, resulting file tree looks like : icon menu enables using screenshot module highlight results provide shortcut . PNG file named module created placed inside www folder names modules listed iconMenu configuration file, shown . Regarding themes, current version package work well light-based themes. every theme tested ’s recommended test different themes find one works well.","code":"name: PROJ logo: logo.png windowtitle: MyProject analysis portal iconMenu: - moduleName - moduleName2 bootswatch:  theme: theme_name  version: 3, 4 or 5 project/ ├─about.md ├─app.R ├─config.yaml ├─... └─www/   ├─logo.png   └─..."},{"path":"https://c4tb.github.io/shinyExprPortal/articles/customization.html","id":"module-customization","dir":"Articles","previous_headings":"Customizing the portal UI","what":"Module customization","title":"Portal UI and Code Customization","text":"Every module included package supports title description fields. title entry menu, whereas description field text appears menu content module. description used indicate user use module also describe aspects module needed. example, include link external resource references. Besides two fields, modules include degree customization colors: compareTrajGroups: list HTML-compatible colors points different value trajectory_category (e.g. time points). degDetails: list HTML-compatible colors non-significant, logFC-significant, p-value-significant logFC p-value significant genes volcano plot geneModulesHeatmap: colors (discrete interpolation) RColorBrewer palettes variables can used annotations heatmaps RColorBrewer palette heatmap colors. multiMeasureCorr: RColorBrewer palete heatmap colors. networkViewer: list colors node categories fonts, RColorBrewer palette heatmap colors. singleGeneCorr: list colors categorical variables scatterplot.","code":"compareTrajGroups:   custom_traj_colors: [\"#ff0000\", \"#ff00ff\", \"#0000ff\"] degDetails:   custom_point_colors: [\"black\", \"yellow\", \"red\", \"blue\"] geneModulesHeatmap:   custom_annotation_colors:     NumericVar1: [\"red\", \"blue\"]     NumericVar2: \"RdBu\"     DiscreteVar1: [\"yellow\", \"green\", \"blue\"]   custom_heatmap_palette: \"BrBG\" multiMeasureCorr:   custom_heatmap_palette: \"BrBG\" networkViewer:   custom_node_colors:     CellType1: \"red\"     CellType2: \"blue\"     OtherDataSet: \"green\"   custom_font_colors:     CellType1: white     CellType2: white     OtherDataSet: black   custom_heatmap_palette: BrBG singleGeneCorr:   custom_point_colors:     SubjectVar1: [\"red\", \"blue\"]     SubjectVar2:       Value1: \"red\"       Value2: \"blue\""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/customization.html","id":"using-custom-modules","dir":"Articles","previous_headings":"","what":"Using custom modules","title":"Portal UI and Code Customization","text":"also possible include new modules without modifying source code package. feature primarily aimed supporting features may niche use case, also useful experiment new ideas. New code implemented based following template, new moduleName: approach , moduleName can now inclu ded config.yaml file along required optional properties. Note config function must defined otherwise new module used, although property validation needed. new module can placed main app.R .R file. second option used, R file must sourced app.R. Create template code folder: package includes function create file template . loading package, run create_module_template(\"moduleName\") create file edit . deployment level, besides sourcing moduleName file required, two changes must made app.R file: setting vector contains names new modules passing variable extra_modules argument run_app: unsure implement feature new module, please post issue package github check source code existing modules.","code":"moduleName_config <- function(config, ...) {    message(\"Checking moduleName configuration\")   # Add dependency names here   requiredPackages <- c(\"\")   stopIfNotInstalled(requiredPackages, \"moduleName\")   if (is.null(config$required_variable)) {     stop(\"moduleName:           'required_variable' is missing\")   }   config }  mod_moduleName_ui <- function(module_name, config, module_config) {   ns <- NS(module_name)   title <- module_config$title   description <- module_config$description      required_variable <- module_config$required_variables      tabPanel(       title = title %||% \"Default title\",       value = \"moduleName\",       tags$h5(description %||% \"Default description\"),       splitLayout(         verticalLayout(           wellPanel(            # Inputs that use the ns object above           )         ),         verticalLayout(           # Outputs         ),         cellWidths = c(\"20%\", \"80%\"),         cellArgs = list(style = \"white-space: normal;\")       )     )    }  mod_moduleName_server <- function(module_name, config, module_config) {   moduleServer(module_name, function(input, output, session) {     ns <- session$ns          measures <- config$data$measures     expression_matrix <- config$data$expression_matrix     sample_lookup <- config$data$sample_lookup     subject_var <- config$subject_variable     sample_var <- config$sample_variable      required_variable <- module_config$required_variable     # Module code here   }) } library(shinyExprPortal)  source(\"newModule.R\") source(\"anotherModule.R\")  extra_modules <- c(\"newModule\", \"anotherModule\")  run_app(\"config.yaml\", extra_modules = extra_modules)"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/dataprep.html","id":"validation-checks","dir":"Articles","previous_headings":"","what":"Validation checks","title":"Data Preparation Guide","text":"package lightweight validation loaded files, checking subjects samples match. ensure correct transformations applied expression data, warn modify missing data – modules expression paired measure, subject’s measure missing excluded plots calculations include measure. following checks made: Matching samples subjects: package confirm every sample expression matrix matched least one subject lookup table. also ensure subjects measures table match least one sample lookup table. , can excess samples subjects table. Matrix format: using .rds file, package check expression matrix indeed saved matrix object rds file. ensure rownames read properly.","code":""},{"path":[]},{"path":"https://c4tb.github.io/shinyExprPortal/articles/dataprep.html","id":"differential-expression-analysis-results","dir":"Articles","previous_headings":"Additional files","what":"Differential expression analysis results","title":"Data Preparation Guide","text":"package includes two modules showcase results differential expression analysis (see config details). modules read files created using limma, edgeR deseq2. files saved column names column names must changed – exception want mix models different packages, rename columns results column names (e.g. p-values identified way across files). modules require creation table lists model results support use additional columns table organize results different types models subsets samples. model results file placed models folder within project folder. table look like following saved CSV TSV file:","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/dataprep.html","id":"gene-moduleslists","dir":"Articles","previous_headings":"Additional files","what":"Gene modules/lists","title":"Data Preparation Guide","text":"heatmap module requires creation table containing lists names gene symbols (see config details). table, row column contains gene lists, symbols separated comma. table list identifier symbol column, can use group-operation paste-collapse create required list, follows: Original file:   Code transform:","code":"table <- data %>%   dplyr::group_by(module) %>%   dplyr::transmute(list = paste(gene, collapse = \",\"))"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/dataprep.html","id":"asking-for-help","dir":"Articles","previous_headings":"Additional files","what":"Asking for help","title":"Data Preparation Guide","text":"issues data preparation, please post issue package GitHub.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/shinyExprPortal.html","id":"using-the-wizard","dir":"Articles","previous_headings":"","what":"Using the wizard","title":"Quick Start Guide for shinyExprPortal","text":"starting wizard, ensure following Create folder app located using RStudio, create new project facilitate rest setup. Place expression matrix file project folder HGNC similar gene names rows samples columns. file can .csv, .tsv/txt, .fst, .qs .rds file. using .rds file, save matrix object, data.frame. Go next step expression matrix structured way saved project folder: Place measures table file project folder variables columns subjects rows. subjects must order samples expression matrix. formats can used, using .rds file, measures file must saved data.frame. Go next step measures table structured way saved project folder: Optionally place metadata table file folder table contains sample information control group, age, etc. add radio buttons interface selecting subsets based variables. also follow one row per subject/sample format. Finally, R, load package run create_config_wizard() using RStudio project, ensure folder files current working directory (check getwd()). wizard inform stage ask questions set configuration file. also wait required additional actions creating folders moving files. Depending choices, least two files created: app.R config.yaml. Open run contents app.R test portal can also copy project folder Shiny server use rsconnect package deploy shinyapps.io.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/shinyExprPortal.html","id":"creating-a-config-template","dir":"Articles","previous_headings":"","what":"Creating a config template","title":"Quick Start Guide for shinyExprPortal","text":"Alternatively, can run create_config_template() create config.yaml file contain placeholders can edit. decide method, create lookup table file, default named lookup_table.csv, matches samples subjects measures table looks like following: can see , lookup table also includes sample metadata information (group). metadata want use create subsets interface (e.g. compute correlations control group) included table defined configuration file sample_categories, following: portal, appear :","code":"#>       source sample_id subject_id     group #> 1 microarray  sample_1  subject_1   control #> 2 microarray  sample_2  subject_2 treatment #> 3 microarray  sample_3  subject_3 treatment sample_categories:   - name: group     label: Group     values:       - treatment       - control"},{"path":"https://c4tb.github.io/shinyExprPortal/articles/shinyExprPortal.html","id":"adding-modules","dir":"Articles","previous_headings":"Creating a config template","what":"Adding modules","title":"Quick Start Guide for shinyExprPortal","text":"config.yaml file created, can edit modify setup modules already defined add new ones. modules included package vary requirements aims: exploratory require setting configuration file, others designed help showcase explore results analysis. computed sets genes using package WGCNA, can create table load geneModulesHeatmap module, example. current version, following modules available: summary modules work basic data files ones require additional files: additional files needed Single gene/multiple measures correlations Single measure/genes correlation Multi-measure/genes correlation Expression/measures changes time Additional files needed Differential expression models summary page: table models, DE packages outputs (e.g. limma, deseq2. edgeR) Differential expression models visualization: table models, DE packages outputs (e.g. limma, deseq2. edgeR) Gene modules heatmap: data frame gene lists (WGCNA, genes interest, etc.) Network viewer (.e. correlated gene modules networks): edge lists networks (e.g. ARACNe) 2D gene projection (e.g. MDS, UMAP): data frame 2D coordinates genes Check Full Configuration Guide details module set additional files required .","code":"shinyExprPortal::show_available_modules() #>  [1] \"cohortOverview\"        \"degModules\"            \"degSummary\"            #>  [4] \"degDetails\"            \"corrModules\"           \"singleGeneCorr\"        #>  [7] \"singleMeasureCorr\"     \"geneModulesHeatmap\"    \"multiMeasureCorr\"      #> [10] \"compareTrajGroups\"     \"networkViewer\"         \"geneProjectionOverlay\""},{"path":"https://c4tb.github.io/shinyExprPortal/articles/shinyExprPortal.html","id":"deploying-it-remotely","dir":"Articles","previous_headings":"Creating a config template","what":"Deploying it remotely","title":"Quick Start Guide for shinyExprPortal","text":"can deploy app Posit/RStudio Connect server , alternatively, public shinyapps.io website (note app public free plan). can follow guide set account install required packages. requirement make work modify app.R file include optional dependencies module (listed configuratoin guide). example, original app.R look like : want use geneModulesHeatmap module, visualizing heatmaps lists genes, must also RColorBrewer installed. deploy shinyapps.io, must import like example : ```","code":"library(shinyExprPortal) run_app(\"config.yaml\") library(shinExprPortal) library(RColorBrewer) run_app(\"config.yaml\")"},{"path":"https://c4tb.github.io/shinyExprPortal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael Henkin. Maintainer, author, copyright holder.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henkin R (2023). shinyExprPortal: Configurable Shiny Portal Sharing Analysis Molecular Expression Data. R package version 1.0.0, https://c4tb.github.io/shinyExprPortal/.","code":"@Manual{,   title = {shinyExprPortal: A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data},   author = {Rafael Henkin},   year = {2023},   note = {R package version 1.0.0},   url = {https://c4tb.github.io/shinyExprPortal/}, }"},{"path":"https://c4tb.github.io/shinyExprPortal/index.html","id":"shinyexprportal","dir":"","previous_headings":"","what":"A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data","title":"A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data","text":"shinyExprPortal configurable Shiny portal visual exploration analysis showcase molecular expression data phenotype data, observed clinical measures. package designed deploying portals using text-based configuration file minimal programming. portal includes modules exploring correlations expression measures, visualizing results differential expression analysis showcasing results downstream analysis methods pathways correlated networks. interface designed gene expression, computational methods compatible matrix samples columns entities, proteins, rows.  initial exploration, expression matrix containing abundance counts data frames containing observed measures can loaded . differential expression methods, package compatible outputs packages limma WCGNA. correlation modules can used early lifecycle bioinformatics project, modules can added new downstream analysis results produced. use configuration file also means portal can easily versioned. demo portal available .","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/index.html","id":"how-to-start","dir":"","previous_headings":"","what":"How to start","title":"A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data","text":"can install latest version package using: Alternatively, can install current development version using: one set set samples group subjects, .e. one sample per patient, can check vignette(\"shinyExprPortal\") quick start guide set configuration file. subjects one samples, e.g. collected time different tissues, check data preparation guide vignette(\"dataprep\") full configuration guide vignette(\"config\") completed either steps , can open run app.R file created test portal.","code":"install.packages(\"shinyExprPortal\") devtools::install_github(\"C4TB/shinyExprPortal\", dependencies = TRUE)"},{"path":"https://c4tb.github.io/shinyExprPortal/index.html","id":"module-documentation","dir":"","previous_headings":"","what":"Module documentation","title":"A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data","text":"full configuration guide vignette(\"config\") describes dependencies, file requirements, mandatory optional settings modules currently supported package.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/index.html","id":"customization-and-extending-the-package","dir":"","previous_headings":"","what":"Customization and extending the package","title":"A Configurable Shiny Portal for Sharing Analysis of Molecular Expression Data","text":"vignette(\"customization\") describes customize visual style portal add new functionality programming new modules. package supports customization via configuration file global level using bslib. modules also support customization colors used visualizations. package also compatible new modules can added without modifying source code portal package. New functionality can developed tested without clone repository recompile package. also open suggestions new modules, please use GitHub issues page .","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a barebones configuration file template — create_config_template","title":"Create a barebones configuration file template — create_config_template","text":"resulting file contain placeholder text caps edit according needs. also includes three correlation modules.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a barebones configuration file template — create_config_template","text":"","code":"create_config_template(filename = \"config.yaml\", target_dir = NULL)"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a barebones configuration file template — create_config_template","text":"filename optional filename, default config.yaml target_dir optional target directory, default current working directory","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a barebones configuration file template — create_config_template","text":"Creates configuration file target_dir","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a barebones configuration file template — create_config_template","text":"","code":"if (interactive()) {     create_config_template() }"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":null,"dir":"Reference","previous_headings":"","what":"Create configuration and app.R files — create_config_wizard","title":"Create configuration and app.R files — create_config_wizard","text":"function runs interactive wizard guides user creation basic configuration file. wizard work simple case expression data one sample matches exactly one subject.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create configuration and app.R files — create_config_wizard","text":"","code":"create_config_wizard(target_dir = NULL)"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create configuration and app.R files — create_config_wizard","text":"target_dir optional folder path, otherwise uses current working directory","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create configuration and app.R files — create_config_wizard","text":"Creates configuration file target_dir","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create configuration and app.R files — create_config_wizard","text":"run wizard, ensure target folder (passed target_dir argument current working directory) contains least expression matrix measures data files. expression matrix follow format sample IDs columns genes rows, gene names first column table. measures file follow format subjects rows measures columns, ensure subjects one sample vice-versa.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_config_wizard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create configuration and app.R files — create_config_wizard","text":"","code":"if (interactive()) {     create_config_wizard() }"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Create example files — create_example","title":"Create example files — create_example","text":"Create example files","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create example files — create_example","text":"","code":"create_example(target_dir = NULL)"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create example files — create_example","text":"target_dir (optional) directory create files, otherwise uses output getwd()","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create example files — create_example","text":"Create examples files target_dir","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create example files — create_example","text":"","code":"if (interactive()) {     dir.create(\"newapp\")     create_example(\"newapp\") }"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_module_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a module code template in current working directory — create_module_template","title":"Creates a module code template in current working directory — create_module_template","text":"Creates module code template current working directory","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_module_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a module code template in current working directory — create_module_template","text":"","code":"create_module_template(module_name)"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_module_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a module code template in current working directory — create_module_template","text":"module_name module name camelCase","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_module_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a module code template in current working directory — create_module_template","text":"Create file module_name current working directory","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/create_module_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a module code template in current working directory — create_module_template","text":"","code":"if (interactive()) {     create_module_template(\"newModule\") }"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"function run created configuration file placed required files app folder. See vignette(\"quickstart\", package = \"shinyExprPortal\") help setup vignette(\"fullguide\", package = \"shinyExprPortal\") complete configuration guide.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   config_file,   data_folder = \"\",   custom_modules = NULL,   nthreads = 1L,   ... )"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"config_file name yaml configuration file data_folder Optional directory prefix data files. Use argument want version files across different folders custom_modules Optional list available custom modules. See 'Details' section. nthreads Optional number threads/cores speed loading files computing correlations UNIX-based systems. Default 1 ... optional arguments.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Shiny Application — run_app","text":"Runs app","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the Shiny Application — run_app","text":"custom_modules contain list names user-defined modules loaded environment calling run_app. module accompanied corresponding mod_moduleName_ui, mod_moduleName_server moduleName_config functions. functions placed custom_modules.R file, example, loaded using source. package parse configuration file, contains one custom module names, call module configuration parsing function add interface. See vignette(\"customization\") complete example. Please note running Windows, nthreads always set 1 due limitations current implementation.","code":""},{"path":[]},{"path":"https://c4tb.github.io/shinyExprPortal/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Shiny Application — run_app","text":"","code":"if (interactive()) { run_app(\"config.yaml\", nthreads = 4) }"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/show_available_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Print list of currently supported modules — show_available_modules","title":"Print list of currently supported modules — show_available_modules","text":"See vignette(\"config\", package = \"shinyExprPortal\") details configure module.","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/show_available_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print list of currently supported modules — show_available_modules","text":"","code":"show_available_modules()"},{"path":"https://c4tb.github.io/shinyExprPortal/reference/show_available_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print list of currently supported modules — show_available_modules","text":"list available modules","code":""},{"path":"https://c4tb.github.io/shinyExprPortal/reference/show_available_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print list of currently supported modules — show_available_modules","text":"","code":"show_available_modules() #>  [1] \"cohortOverview\"        \"degModules\"            \"degSummary\"            #>  [4] \"degDetails\"            \"corrModules\"           \"singleGeneCorr\"        #>  [7] \"singleMeasureCorr\"     \"geneModulesHeatmap\"    \"multiMeasureCorr\"      #> [10] \"compareTrajGroups\"     \"networkViewer\"         \"geneProjectionOverlay\""},{"path":"https://c4tb.github.io/shinyExprPortal/news/index.html","id":"shinyexprportal-100","dir":"Changelog","previous_headings":"","what":"shinyExprPortal 1.0.0","title":"shinyExprPortal 1.0.0","text":"First release","code":""}]
